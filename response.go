package hat

import (
	"bytes"
	"io"
	"io/ioutil"
	"net/http"

	"github.com/stretchr/testify/require"
)

// ResponseAssertion asserts a quality of the response
type ResponseAssertion func(r Response)

// Response represents an HTTP response generated by hat.Request.
type Response struct {
	*http.Response
	t T
}

// DuplicateBody creates a duplicate body reader and returns it.
func (r Response) DuplicateBody() io.Reader {
	byt, err := ioutil.ReadAll(r.Body)
	require.NoError(r.t, err, "failed to read body")

	var dupRd io.Reader
	r.Response.Body, dupRd = ioutil.NopCloser(bytes.NewReader(byt)), ioutil.NopCloser(bytes.NewReader(byt))

	return dupRd
}

// Assert runs each assertion against the response.
// It closes the response body after all of the assertions have ran.
func (r Response) Assert(t T, assertions ...ResponseAssertion) {
	defer r.Body.Close()

	for _, a := range assertions {
		a(r)
	}
}
