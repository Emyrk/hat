package hat

import (
	"bytes"
	"io/ioutil"
	"net/http"

	"github.com/stretchr/testify/require"
)

// ResponseAssertion asserts a quality of the response.
type ResponseAssertion func(r Response)

// Response represents an HTTP response generated by hat.Request.
type Response struct {
	*http.Response
	t T
}

// DuplicateBody reads in the response body.
// It replaces the underlying body with a duplicate.
func (r Response) DuplicateBody() []byte {
	byt, err := ioutil.ReadAll(r.Body)
	require.NoError(r.t, err, "failed to read body")

	r.Response.Body = ioutil.NopCloser(bytes.NewReader(byt))

	return byt
}

// Assert runs each assertion against the response.
// It closes the response body after all of the assertions have ran.
func (r Response) Assert(assertions ...ResponseAssertion) {
	defer r.Body.Close()

	for _, a := range assertions {
		a(r)
	}
}
